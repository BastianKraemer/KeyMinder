KeyMinder - Manual
===============================================================================

This is the manual of KeyMinder. This manual does not contain any information
like "How to create a password file". If you need or want to have explanations
like this, then this application is most likely not the right one for you :).

This manual only contains some brief introduction how you can use the
absolutely not self-explanatory features.


--------------------------------[ Encryption ]---------------------------------

At first you may want to know something about the encryption of KeyMinder.
The supported encryption methods are: (cipher/hash algorithm)
	- AES-128/MD5      (worst)
	- AES-256/SHA-256
	- AES-256/PBKDF2   (best)

By default Java disables the encryption with AES-256 because of some US export
restrictions. You can only enable encryption with AES-256 by "upgrading" your
Java installation using the "Java Cryptography Extension (JCE) Unlimited 
Strength Jurisdiction Policy Files". You will find them on the Java SE
download page.

Note: Currently the encryption is not enabled automatically; it has to be
      turned on manually for each file.

---------------------------------[ Settings ]----------------------------------

All your preferences will be saved in a XML file (keyminder_settings.xml)
By default KeyMinder is searching for this file in its working directory at
first, if the file couldn't be found KeyMinder will check your home directory
for a settings file.
The settings file is not encrypted.

Note: All settings which are defined in the "File settings" will be saved in
      the password file itself, not in the KeyMinder settings file.


-------------------------------[ Console Mode ]--------------------------------

By default, KeyMinder is used with its graphical user interface. but there is
also an interactive console mode. You can force KeyMinder to use the
"ConsoleMode" using the command line switch '--console'.
For more information about the command line take a look at the "Command line
options" section below.

You can also access the interactive console with the graphical user interface,
just open the "Terminal" (Tools -> Terminal) and you are able to customize
KeyMinder with some even more special features ;)

To get started with the "ConsoleMode" try the command 'help'. This will print a
list of all currently available commands. If you want to learn more about a
specific command, type 'man <command>' to get a brief introduction.


---------------------------[ Command line options ]----------------------------

All options can be used with "--", "-" or "/".

    Open a password file on startup
    *******************************
        -open [file] [-pw [password]]
	 
    Load another settings file
    **************************
        -settings [file]

    Start in console mode (no graphical user interface)
    ***************************************************
        -console

    Tell KeyMinder to be a bit more verbose
    ***************************************
        -verbose
	
	Note: Most likely you have to run KeyMinder using 'java -jar' to run in
	      console mode. For example: 'java -jar KeyMinder.jar --console'

    Suppress some standard console output
    ***************************************
        -silent

    Disable output redirect to the "Terminal"
    *****************************************
        -no-output-redirect

    Print the current application version
    *************************************
        -version

    Print a short help
    ******************
        -help

-----------------------------[ Module SSH-Tools ]------------------------------

To use this features the module "SSH-Tools" must be enabled.

    Configure host port an login credentials
    ****************************************

You can use each tree node for a single SSH configuration. Therefore the side
bar contains a tab page called "SSH".


    KeyMinder XML application profiles
    **********************************

KeyMinder allows you to start applications using their command line interface
and the data you have stored in your password file. This allows you to pass
any required login credentials directly to another application.
The way these command line arguments are generated is defined in an XML file.
This file is called "command line descriptor". Currently KeyMinder includes
'command line descriptor' files for the applications "PuTTY" and "WinSCP".
These built-in descriptors allows you to handle socks connections as well as
launching "PuTTY" or "WinSCP" using the context menu.

All built-in descriptors are disabled by default.

	You can enable them using the settings dialog:
		Edit -> Preferences -> SSH-Tools -> Features
	
	Or even using ConsoleMode or Terminal with one of these commands:
		'config -s sshtools.enable_putty yes'
		'config -s sshtools.enable_winscp yes'

Then restart KeyMinder and you'll find new items in the context menu.

Note: Don't forget to define the path to PuTTY and WinSCP. You can do this...
      
    ...using the settings dialog:
			Edit -> Preferences -> SSH-Tools -> Path configuration
			
	...using ConsoleMode or the Terminal with one of these commands:
		'config -s sshtools.puttypath "<path>"'
		'config -s sshtools.plinkpath "<path>"'
		'config -s sshtools.winscppath "<path>"'

		(don't forget to save the new configuration using 'config --save')


    SSH port forwarding
    *******************

If you want to use port forwarding, you have to use the following pattern:

	[source port]:[host name]:[host port].

To display all forwarding more clearly you have to use multiple lines. It is
necessary to store one forward in each line. It's also highly recommended to
avoid having empty lines between your forwarding.
	
	Maybe your configuration could look like this:

	80:example.com:80
	443:example.com:443

Note: Every line in this text area that starts with "#" will be ignored


    Start and stop socks profiles
    *****************************

You can handle several SSH socks connection using KeyMinder, but you have to
know that this program just starts other applications for this goal.
Currently you can establish socks connections using the SSH applications
"PuTTY" and "Plink". Both applications will exactly do the same, but "Plink"
won't show a window on your desktop.

	* Download page for "PuTTY" and "Plink"
	* http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html

You can create socks profiles with a graphical dialog:
	File -> File settings -> SSH-Tools -> Socks configuration

After this you can launch your profiles using the menu item "Socks" or via
ConsoleMode/KeyMinder Terminal with the command 'socks [start|stop] [name]'.
For more information about this command use 'man socks'.


    The "using socks" feature
    *************************
Currently the using socks feature is only available if you are using "PuTTY".
When you have started a socks profile, you can tell PuTTY to connect to a
server using this socks connection. Unfortunately I don't know a way to do this
via command line, but there is a workaround:

	1. Start PuTTY, select "Connection" -> "Proxy"
	2. Enter in the following configuration:
		- Proxy type: "SOCKS5"
		- Proxy hostname: "localhost"
		- Proxy port: <The port for dynamic forwarding of your socks profile>
	3. Go back to "Session" and save your session
	4. Open the KeyMinder socks configuration again and add the following line
	   to the "Additional parameters to use socks connections" text area:
	   "putty_sessionname=<your session name>"
	   
	   Note: Every line in this text area that starts with "#" will be ignored

Now you can start SSH connections using your socks profile.


    Create own command line descriptors
    ***********************************

There are at least a hundred other applications with a command line interface
that could be launched using KeyMinder.

This manual won't explain how it exactly works, in my opinion the best way to
create your own application profile is to copy one of the built-in XML files
and adjust it to your own requirements. Feel free to modify them the way you
want.

    Note: You will find the application profiles in the jar file below
          "/de/akubix/keyminder/modules/sshtools" or in the main resources.

The last step, to include your own profiles into KeyMinder is very simple,
just put them in a folder an tell KeyMinder the location of this folder, by
default this path is "./sshtools".
 
You can define this path in the 'path configuration' of the SSH-Tools module,
(take a look at: Edit -> Preferences -> SSH-Tools -> Path configuration) or
even with the command 'config -s sshtools.cmdlinedescriptors.path [path]'
